******************************************************************
1

******************************************************************
2
What is selenese ?
A)  Selenium set of commands that run our test is called Selenese.. A sequence of these commands is a test script.. There are three types of selenese..

https://addons.mozilla.org/en-US/fire...

Selenium IDE Advantages

• Very Easy to use
• It has the capability to Convert test to different programming languages like C#, Java, Ruby, Python.
• Programming language knowledge is not required for Selenium-IDE
• In Selenium IDE, user can debug and breakpoints
• Selenium IDE Flexible for the users. 

Selenium IDE Disadvantages
• As it is a Firefox plugin, its support is limited to only Firefox browser only.
• Does not support iteration and conditional statements.
• Does not support error handling.
• Does not support test script reuse.
• Does not support Database testing.
• Cannot handle pop windows.
******************************************************************
3

******************************************************************
4

******************************************************************
5
How to manage browser window?
How make browser to run in full window mode?
How to minimize the browser window?
How to maximize the browser window?
How to set the browser window position?
How to get the browser window position?
How to set the browser window size?
How to get the browser window size?

Maximize, Minimize and FullScreen of browser Window
Set and get the position and size of browser window

Window property in IOptions interface
Manage() is method present in WebDriver interface
Manage() method returns Options object.
Window is a property present in Options Interface

How to FullScreen the Browser Window
FullScreen() is a method present in IWindow interface.
Sets the current window to full screen if it is not already in that state.
Usage: driverManage().Window.FullScreen();
driver.Manage() is a method that returns instance of Options interface, now the IOptions interface has method window() that returns instance of IWindow interface, this IWindow interface has method FullScreen() Sets the current window to full screen if it is not already in that state

How to Maximize the Browser Window
Maximize() is a method present in IWindow interface.
This method will Maximizes the current window if it is not already maximized.
Usage: driver.Manage().Window.Maximize();
driver.Manage() is a method that returns instance of IOptions interface, now the IOptions interface has property Window that returns instance of IWindow interface, this Window interface has method Maximize that maximizes the current window if it is not already maximized.

How to Minimize the Browser Window
Minimize() is a method present in IWindow interface
This method is used to Minimizes the current window if it is not already minimized.
driver.Manage().Window.Minimize();

Usage: driver.Manage().Window.Minimize();
driver.Manage() is a method that returns instance of IOptions interface, now the IOptions interface has property Window that returns instance of IWindow interface, this Window interface has method Minimize that minimizes the current window if it is not already minimized.

How to get and set window Position
This property gets or sets the position of the browser window relative to the upper-left corner of the screen. 
It is a read and write property.

Usage: driver.Manage().Window.Position;

driver.Manage() is a method that returns instance of IOptions interface, now the IOptions interface has property Window that returns instance of IWindow interface, this Window interface has property Position which gets and sets the position of the window.

How to get and set size of window
Size is property present in IWindow Interface.
Gets or sets the size of the outer browser window, including title bars and window borders.
It is a read and write property
Usage: Size size=driver.Manage().Window.Size;
driver.Manage().Window.Size=new Size(200,400);

How to get and set Size
driver.Manage().Window.Size;

driver.Manage() is a method that returns instance of IOptions interface, now the IOptions interface has property Window that returns instance of IWindow interface, this Window interface has property Size which gets and sets the size of the browser window.

Possible Interview Questions
How to get and set position of browser window
How to get and set the size of browser window
How to Full screen, maximize and minimize the browser window

[TestMethod]
        public void ManageBrowserWindow()
        {
            IWebDriver driver = new FirefoxDriver();
            driver.Url = "http://ankpro.com";

            // Browser fullscreen, minimize and maximize
            // Browser goes full screen
            driver.Manage().Window.FullScreen();
            Thread.Sleep(4000);
            // Browser goes full screen
            driver.Manage().Window.Minimize();
            Thread.Sleep(4000);
            // Browser goes full screen
            driver.Manage().Window.Maximize();
            Thread.Sleep(4000);

            // Browser size property (Read and write)
            // Setting the browser height and width
            driver.Manage().Window.Size = new Size(400, 600);
            Thread.Sleep(4000);
            // Setting the browser height and width
            Size size = driver.Manage().Window.Size;
            Console.WriteLine(size);
            Thread.Sleep(4000);

            // Position property (Read and write)
            // Move the browser window position
            driver.Manage().Window.Position = new Point(400, 200);
            Thread.Sleep(4000);
            // get the position of the browser window
            Point point=driver.Manage().Window.Position;
            Console.WriteLine(point);
            driver.Quit();            
        }

ankpro
ankpro training
C#
C sharp
Bangalore
Rajajinagar
Selenium
Coded UI
Mobile automation testing
Mobile testing
JQuery
JavaScript
.Net
C
C++
Components of the .Net framework
Hello World
Literal
Keywords
Variable
Data types
Operators
Branching
Loops
Arrays
Strings
Structures
Enums
Functions
******************************************************************
6
How to navigate in browser window using selenium webdriver?
Navigation from one url to another url
Navigate forward and backward in current window
Refreshing the current window

How to Navigate new Web Page?
Navigate() is a method present in IWebDriver interface.
Navigate() method returns INavigation type
GoToUrl() is a method present in INavigation interface
Usage: driver.Navigate().GoToUrl(string Url);

driver.Navigate() is a method that returns instance of INavigation interface, now the INavigation interface has method GoToUrl that load a new web page in the current browser window

Here we passing Url as parameter to load

How to Navigate Back?
Back() is a method present in INavigation interface
This method is used to Move back a single entry in the browser's history.

Usage: driver.Navigate().Back();

driver.Navigate() is a method that returns instance of INavigation interface, now the INavigation interface has method Back that Move back a single entry in the browser's history. 

How to Navigate Forward?
Forward() is a method present in INavigation Interface
This method will move a single item forward in the browser's history.
Usage: driver.Navigate().Forward();

driver.Navigate() is a method that returns instance of INavigation interface, now the INavigation interface has method Forward that move a single "item" forward in the browser's history. 

How to Refresh the Window Page?
Refresh() is a method present in INavigation Interface
This method will refreshes the current browser window page.
Usage: driver.Navigate().Refresh();

driver.Navigate() is a method that returns instance of INavigation interface, now the INavigation interface has method Refresh that refreshes the current browser window page. 

Possible Interview Questions
How to navigate to new window from current window?
How to navigate forward and back from current browser window?
How to refresh the current browser window?

ankpro
ankpro training
Asp.net MVC
C#
C sharp
Bangalore
Rajajinagar
Selenium
Coded UI
Mobile automation testing
Mobile testing
JQuery
JavaScript
.Net
C
C++
Components of the .Net framework
Hello World
Literal
Keywords
Variable
Data types
Operators
Branching
Loops
Arrays
Strings
Structures
Enums
Functions
******************************************************************
7

******************************************************************
8
Locating HTML elements using CSS selectors
Like our facebook page www.facebook.com/ankprotraining

What is a css locator?
Locating Element Using CSS Selectors.
Cascading Style Sheets (CSS) is a style sheet language

How locate the elements in webpage using selenium css selector?

1. * CSSSelector
This is a wildcard, which will select all elements in the DOM.

usage :  driver.FindElements(By.CssSelector(“*”))

Selects all elements in DOM

2. # CSSSelector
This refers to Id , which will select all element which is having Id Attribute in the DOM.

usage :  driver.FindElement(By.CssSelector(“#Email”))

This selector will select a element whose id is Email

3. . CSSSelector 
This refers to class , which will select all element which is having class Attribute in the DOM.

usage :  
driver.FindElement(By.CssSelector(“. form-control”)).

This selector will select a element whose class name is form-control.

4. tagname[attribute=“value”] CSSSelector
This refers to particular element with the tagname attribute and value 

usage :  
driver.FindElement(By.CssSelector(“input[name=‘Email’]”))

This selector will select a element whose tagname is input, attribute is name and value is Email.

5. ^ CSSSelector
This refers to any attribute , which will select the first element, we would use ^= which means ‘starts with.

usage :  
driver.FindElement(By.CssSelector(“ a[href^='/Home']”))

This selector will select a element whose tagname is a, attribute is href^ and value is /Home

6. $ CSSSelector
This refers to any attribute , which will select last element, we would use $= which means ‘ends with’

usage :  
driver.FindElement(By.CssSelector(“a[href$='Training']”))

This selector will select a element whose tagname is a, attribute is href$ and value ends Training

7. Element  Element CSSSelector
This will select only the descendant element that is  preceded by the former element 

usage :  
driver.FindElement(By.CssSelector("footer p")).Text

This selector will select a p element which is a descendant element of footer tag.

8. Element + Element CSSSelector
This will select only the element that is immediately preceded by the former element 

usage :  
driver.FindElement(By.CssSelector("h1+p")).Text

This selector will select p tag element of preceded h1 tag.

9.  Element Attribute CSSSelector
This will select only the Attribute.

usage :  
driver.FindElement(By.CssSelector("form[role]")).Text

This selector will select the element which is having a role attribute (With or without value).

10.  Checked CSSSelector
This will select the element which is checked (Check box and radio button)
usage :  
driver.FindElement(By.CssSelector("input[type=checkbox]:checked"))
This selector will select the checked checkbox.

Possible Interview Questions on css locators
How to use different types of CSSSelector?
How to select all elements in a DOM using CSS selector?
How to select only checked or unchecked check boxes or radio buttons?
How to select element by attribute name?
******************************************************************
9
What is XPath Locator?

Like our facebook page www.facebook.com/ankprotraining

XPath locator syntax
What is absolute XPath and relative Xpath

XPath :
XPath stands for XML Path
XPath is used to find the element in the HTML DOM
The success rate of finding an element using Xpath is too high
XPath is used where element has no other way of locating
XPath provider plugins are available but encouraged to use only to validate the user written XPath

Types of XPath
Absolute XPath
Relative XPath

Absolute XPath :
Absolute XPath starts with the root node “html”
The advantage of using absolute is, it identifies the element very fast.
Disadvantage here is, If some other tag added or removed in between, then this path will no longer works.
 Example:
  
  If the Path we defined as
  1. html/body/div[2]/div[1]/img
  
  If there is a tag that has added between div[1] and img as below
  2. /html/body/div[2]/div[1]/p/img
  
  The first path will not work as ‘p' tag added in between

Sample Absolute XPath : 
html/body/div[2]/footer/p

In relative xpath, path starts with the node of your choice.
It starts with Double forward slash(//).
Syntax:    //table/tbody/tr/th
Advantage of using relative xpath are, 
 You don't need to mention the long xpath
 You will choose the element from where the relative path should begin
 The chosen element is less likely to change
This is a safer approach.

Sample Relative XPath :
//img
//input[@Id=‘Email’]

XPath to find all elements
Syntax: .//*

usage :  driver.FindElement(By.XPath(“.//*”))

This XPath will select all the elements present in DOM.

XPath using tag name :
Syntax: .//TagName

usage :  driver.FindElement(By.XPath(“.//input”))

This XPath will select an element whose tagname is input

XPath using attribute: 
Syntax: TagName[@attribute=‘Value’]

usage :  driver.FindElement(By.XPath(“.//input[@id=‘Email’]”))


This XPath will select an element whose tagname is input, attribute is id and value is Email.

XPath using multiple attributes :
Syntax://tagname[@attribute1=’value1’] [@attribute2=’value2’]’ 

usage :  driver.FindElement(By.XPath(“.//input[@id=‘Email’][@name=‘Email’]”))

This XPath will select an element whose tagname is input, attribute is id is Email and name attribute is also Email

XPath using and :
Syntax://tagname[@attribute1=’value1’and                 @attribute2=’value2’]’ 

usage :  driver.FindElement(By.XPath(“.//input[@id=‘Email’ and @name=‘Email’]”))

This XPath will select an element whose tagname is input, attribute is id is Email and name attribute is Email

XPath using or:
Syntax://tagname[@attribute1=’value1’ or               @attribute2=’value2’]’ 

usage :  driver.FindElement(By.XPath(“.//input[@id=‘Email’ or @name=‘mailid’]”))

This XPath will select an element whose tagname is input, attribute id should be Email or name attribute should be mailid

XPath using index [] :
Syntax://tagname[number]

usage :  driver.FindElement(By.XPath(“//tr[2]/td[2]”))

This XPath will select second td element in second row(tr)

Possible Interview Questions on Xpath :
What is XPath?
Which are the types of XPath?
What are the difference between relative and absolute XPath?
How to select all the elements in DOM using XPath?
How to find element using XPath along with tagname?
How to find element using XPath with attribute?
How to find element using XPath with multiple attributes?
How to find element using XPath with ‘and’ operator?
How to find element using Xpath with ‘or’ operator?
How to find element using Xpath with indexing?
******************************************************************
10
XPath Functions
Like our facebook page www.facebook.com/ankprotraining

XPath Functions
 text()
 starts-with()
 contains()
 not()
 last()
 position()

XPath using text() function :
Syntax:.//*[text()=’VisibleText’]

usage : driver.FindElement(By.XPath(“.//*[text()='Our People'] ”))

This XPath will select an element which contains the text “Our People”.

XPath using starts-with() function:
Syntax://tagname[starts-with(@attribute-name,’value’)]

usage : driver.FindElement(By.XPath(“.//input[starts-with(@id, 'Rem')]”))

This XPath will select an element whose tagname is input, attribute is id  and value starts with Rem

XPath using contains() function : 
Syntax://tagname[contains(@attribute,’value’)]

usage : driver.FindElement(By.XPath(“.//input[contains(@id,’Me’)]”))

This XPath will select an element whose tagname is input, attribute is id  and value that contains Me

XPath using not() function :
Usage : driver.FindElement(By.XPath(“.//input[@type='checkbox' and  not(@checked)]”)) 

This XPath will select checkboxes which do not have the attribute checked.

XPath using last() function:
Syntax: (//tagname[last()])

usage : driver.FindElement(By.XPath(“.//tbody/tr[last()]”))

This XPath will select last element in the table.

XPath using last()-1 function :
Syntax: (//tagname([last()-1])

Usage : driver.FindElement(By.xpath(“.//tbody/tr[last()-1]”))

This XPath will select last but one element in the table.

XPath using position() function:
Syntax: XPath("(//tagname[position()=2]")

Usage : driver.FindElement(By.XPath("(.//input[@type='text'])[position()=2]"))

This XPath will select the text box in the 2st position. 

Possible Interview Questions on selenium xpath functions
Which are types of functions available in XPath?
How to use text() function in XPath?
How to use starts-with() function in XPath?
How to use contains() function in XPath?
How to use last() function in XPath?
How to use not() function in XPath?
How to use position() function in XPath?
******************************************************************
11

******************************************************************
12

******************************************************************
13
Selenium Locators Best Practices
Like our facebook page www.facebook.com/ankprotraining


Selenium Locators Best Practices :
1.  If you have access to the developers ask them to add the IDs to elements

2.  If application under test has lot of dynamic ids, target the stable part of the id

ex: lessthan span id='myproduct-1234' greaterthan Xyz mobile phone lessthan /spangreaterthan

 Then target only ‘myproduct’

3. Your order of locator should be

 If your target is single element
   Id - Name - CSS Selector -Xpath(Relative)
 If your target is multiple elements
  ClassName - TagName - CSS Selector - Xpath(Relative)
 If your target element is a link with shorter link text
  LinkText -  href
 If your target element is a link with longer link text
  PartialLinkText - href

4. Keep your XPath or CSS short

   EX: Instead of //div/table[@id=‘mytable’]
     use //*[id=‘mytable’] 
     instead of div table #mytable
     use #mytable

5. If you do not get a element with Id or Name use the parent or child element as your reference in your relative xpath

div id="subjects" class=”content”
 ul
  li English /li 
  li Maths /li
  li Science /li
 /ul
/div

If your target element is  li English /li then you can find element by
IWebElement firstSubject = driver.FindElement(By.CssSelector("#subjects li : first-child"))
    or
IWebElement firstSubject = driver.FindElement(By.XPath("//*[@id='subjects']/ul/child::li[1]"))

6. Avoid absolute xpath

Ex: /html/body/div/div/div/div/div/div[2]/div/div/div/div/div[2]/div/span

7.  Avoid using xpath and css finding tools like firepath and chropath to get xpath of css as they may not give you optimized xpath or css. 

8.  Always keep a cheat sheet in your work desk
   
Possible Interview Questions on Selenium locators best practices :
What are the best practices of selenium Webdriver locators?
What is the locators priority order?
******************************************************************
14

******************************************************************
15
What is IWebElement? What are the methods and properties in IWebElement?
Like our facebook page www.facebook.com/ankprotraining

IWebElement interface
Properties in IWebElement
Methods in IWebElement

WebElements :
All elements present in the html document are WebElements.
HTML elements like text box, button, checkbox, div, span etc.. are web elements
IWebElement is an interface
IWebElement contains methods or properties for web elements
FindElement and FindElements methods will return WebElement object and objects respectively

Displayed property:
This property is used to verify whether element is available in UI.

It will return boolean true value if object is available in UI.

Usage :  driver.FindElement(By.ClassName("img-responsive")).Displayed;

Above code will return true whether the element having class name is img-responsive is displayed. 

Enabled property:
This property is used  for verify whether element is active in UI.

It will return boolean true value if object is active in UI.

Usage : driver.FindElement(By.Id("Email")).Enabled;
 
Above code will return true whether the element having Id  Email is enabled. 

Location property:
This property is used to capture the location of the selected web element.

It will return Point, this Point structure has X and Y coordinates of the element. 

Usage :  driver.FindElement(By.Id(“Email")).Location;

Above code will return X and Y co ordinates from top left corner for the element having Id  Email. 
 
Selected property:
This property is used  for verify whether radio button, checkbox or dropdown are already selected or not.

It will return boolean true value if object is selected already. 

Usage : driver.FindElement(By.Id("RememberMe")).Selected;

Above code will return true if the element having RememberMe is selected. 

Size property:
Gets the height and width of the selected web element.

It will return Size, this Size structure has height and width coordinates of the selected element.

Usage :driver.FindElement(By.Id(“Email")).Size;

Above code will return height and width of the element whose id is   email. 

TagName property:
This property is used to capture the tag name of the selected web element.

Usage :  driver.FindElement(By.Id(“Email")).TagName;

Above code will return TagName of the webelement whose Id is Email. 

Text property:
This property is used to capture the text from the selected web element.

Usage :  driver.FindElement(By.XPath(".//h2")).Text;

Above code will return the text present within h2 tag.

Clear() method:
This method is used to reset existing value from textbox or textarea box.

Usage : driver.FindElements(By.Id(“Email”)).Clear();

Above code will clear the text present in web element whose id is  email.

Click() method:
This is used to perform left click operation on the selected web element.

Usage : driver.FindElement(By.LinkText(“Register”)).Click();

Above code will click on the anchor tag which is having Register as link text.

FindElement() method:
Locating element in IWebDriver is done by using the method “FindElement(By.locator())”.
FindElement() method takes locator(By object) as an argument and returns a reference of the object of type IWebElement.

Usage: driver.FindElement(By.Id("Email")).SendKeys("a@a.com");

Above code searches entire HTML document whose id is Email and sends keys a@a.com to that web element.

FindElements() method:
FindElements() method takes locator(By object) as an argument and returns a collection of type IWebElement.

Usage: driver.FindElements(By.TagName("//input")).Count;

Above code searches entire HTML document whose tag name is input and returns a count of the such web elements.

GetAttribute() method:
This method used to get the value of the passed attribute for selected web element.

Usage : driver.FindElement(By.TagName("img")).GetAttribute("src");

Above code will return the value of the src attribute of the element having img as tagname.

GetCssValue() method:
This method used to get the value of the passed css property for selected web element. 

Usage :  driver.FindElement(By.Id(“registerLink”)).GetCssValue(“color”);

Above code will return the color css property value of the element having registerLink as Id.

SendKeys() method:
This method used to pass or type data into text box or text area box.

Usage :  driver.FindElement(By.Id(“Email”)).SendKeys(“a@a.com);

Above code searches entire HTML document whose id is Email and sends keys a@a.com to that web element.

Submit() method:
This method used to submit HTML form into server, it can be used only when button type attribute is submit.

Usage :  driver.FindElement(By.XPath(".//input[@type='submit']")).Submit();

Above code searches entire HTML document whose xpath is .//input[@type='submit'] and clicks on that button

Selenium IWebElement possible Interview Questions:
What is IWebElement interface?
What are the different types of properties and methods available in IWebElement interface?
******************************************************************
16
Differences between FindElement  and FindElements methods of IWebElement
Like our facebook page www.facebook.com/ankprotraining

What is FindElement method
What is FindElements method
Differences Between FindElement And FindElements

FindElement() method:
Locating element in IWebDriver is done by using the method “FindElement(By.locator())”.
FindElement() method takes By object as an argument and returns a reference of the object of type IWebElement.

FindElements() method:
FindElements() method takes By object as a parameter and returns a collection of type IWebElement.
Finds all elements within the current context using the given By mechanism and returns a list of IWebElements

Difference Between FindElement And FindElements :
FindElement - On zero match : if element doesn’t exist or not available on the page then NoSuchElementException will be thrown.

FindElements - On zero match : if element doesn’t exist or not available on the page then, the return value will be an empty list of IWebElements.



FindElement - On one element match : Returns the found web element.

FindElements - On one element match : Returns list of IWebElements which contains only one element.



FindElement - On more than one element match : Returns the first appearance in DOM. 

FindElements - On more than one element match : Returns all matched elements as a list of IWebElements .



FindElement vs FindElements

On Zero Match - throws NoSuchElementException - return an empty list
On One Match - returns WebElement - Returns a list of one WebElement only
On More than One Match - returns the first appearance in DOM - returns list with all matching instance


Possible Interview Questions on findelement and findelements :
What are the difference between FindElement() and FindElements()?
******************************************************************
17
How to count checked and unchecked checkboxes using find elements method.
Like our facebook page www.facebook.com/ankprotraining

How to count the checked and unchecked checkboxes?

Count Checked And Unchecked CheckBoxes :
Every Web element has Selected property, which tells us that whether it has been checked or not.

Usage:driver.FindElement(By.XPath("//input[@type='checkbox']")).Selected;

This code will return true if the checkbox is checked else returns false

Possible Interview Questions on checkbox checking

How to count Checked and Unchecked checkboxes ?
******************************************************************
18
How to use newline and tab characters in sendkeys?
Like our facebook page www.facebook.com/ankprotraining

How to type text in next line
How to use tab between the text

How To Type Text In New Line?
To add text in next line we need to add \n to the text where you want keep the text in next line.

Usage: driver.FindElement(By.Id("comment")).SendKeys("Good \n morning");

This code will pass the morning text to next line.

How To Use Tab In Sendkeys Method?
To add tab between the text we need to add \t between the text.

Usage:driver.FindElement(By.Id("comment")).SendKeys("Good \t morning");

This code will give some space between Good the morning text.

Possible Interview Questions on sendkeys method

How to add text in next line?
How to use new line character in SendKeys method?
How to give tab between the Text?

Code How to use newline and tab characters in sendkeys:

[TestMethod]
  public void TypeInNextLineAndTabBetweenText()
  {
   IWebDriver driver = new FirefoxDriver();
   driver.Url = "http://uitestpractice.com/Students/Form";
   driver.FindElement(By.Id("comment")).SendKeys("Good \t morning");
   Thread.Sleep(2000);
   driver.Quit();
  }
******************************************************************
19
How to find element within element using FindElement  multiple times
Like our facebook page www.facebook.com/ankprotraining

ISearchContext interface:
To find element within element we need to use FindElement multiple times
First Call IWebDriver’s FindElement then call IWebElement’s FindElement
IWebDriver and IWebElement are Inherited from ISearchContext Interface.

How To Find Element With In Element :
Usage:driver.FindElement(By.Id("div3")).FindElement(By.TagName("span")).Text

We are calling FindElement method from IWebdriver it will return div3 again we calling the findElement from IWebElement

For the second FindElement SearchContext is reduced from entire DOM to only div3

Possible Interview Questions on FindElements method:

How to find element within the element

[TestMethod]
  public void ElementWithInElement()
  {
   IWebDriver driver = new FirefoxDriver();
   driver.Url = "file:///F:/Bhavana%20Recording/Selenium%20using%20csharp/Chapter%2019-How%20to%20find%20element%20within%20element/Element%20within%20a%20element.html";
   string s1 = driver.FindElement(By.Id("div3")).FindElement(By.TagName("span")).Text;
   Console.WriteLine(s1);
   Thread.Sleep(2000);
   driver.Quit();
  }
******************************************************************
20
Dropdown and multiselect dropdown in selenium Webdriver
Like our facebook page www.facebook.com/ankprotraining

How To Handle Dropdown And Multiselect Dropdown In Selenium WebDriver?

Agenda :
Drop-down and Multi Select Drop-down
SelectElement class
Properties in SelectElement class
Methods in SelectElement class

Drop-Down And Multiselect Drop-Down :
Drop-down list, or drop-down box, a drop-down menu is a list of items by which user can select a single item.
Multiselect dropdown list control allows the user to select multiple items from the list.

SelectElement Class :
SelectElement is a class which is provided by Selenium to perform multiple operations on drop down list.
Pass the Web Element to the constructor of SelectElement class.
Object is created using below syntax.

Syntax : SelectElement selectElement = new SelectElement(IWebElement);

Select Element Options Property :

Options { get; } : IList IWebElement

This gets the list all options belonging to the Select tag.


Select Element IsMultiple Property :

IsMultiple { get; } : bool

This tells whether the SELECT element support multiple selecting options at the same time or not. 

This accepts nothing by returns true or false value. 


Select Element SelectByText:

void SelectByText(string text)

We select an option given in any dropdowns and multiple selection boxes with SelectByText method.

It takes a parameter of string which is one of the Value of Select element and it returns nothing.


Select Element SelectByText :

void SelectByText(string text)

We select an option given in any dropdowns and multiple selection boxes with SelectByText method.

It takes a parameter of string which is one of the Value of Select element and it returns nothing.


Select Element DeSelect Methods :

The way we select different values of DropDown & Multi Select, the same way we can also deselect the values. 

This methods do not work for DropDown and only work for Multi Select elements.


Select Element DeselectByText :

void DeselectByText(string text)

Deselect all options that display text matching the argument.

It takes a parameter of string which is one of the Value of Select element and it returns nothing


Select Element SelectByIndex :

void SelectByIndex(int index)

In this method we need to provide the index number of the option here rather the option text.

It takes a parameter of int which is the index value of Select element and it returns nothing.


Select Element DeselectByIndex :

void DeselectByIndex(int index) 

Deselect the option at the given index.

It takes a parameter of int which is the index value of Select element and it returns nothing.


Select Element SelectByValue :
void SelectByValue(string value) 

In this method we need to pass the value of the option rather the option text or index.

It takes a parameter of String which is on of the value of Select element and it returns nothing.


Select Element DeselectByValue :

void DeselectByValue(string value) 

Deselect all options that have a value matching the argument.

It takes a parameter of String which is on of the value of Select element and it returns nothing.


Select Element SelectedOption property :

SelectedOption { get; } : IWebElement

Gets the selected item within the select element.

If more than one item is selected this will return the first item.


Select Element AllSelectedOptions property :

AllSelectedOptions { get; } : IList IWebElement

Gets all of the selected options within the select element.


Select Element DeselectAll :

void DeselectAll()

Clear all selected entries.

This is only valid when the Select supports multiple selections.


Possible Interview Questions on Selenium Select Element class :

What is difference between drop-down and multi select drop-down?
Which are the properties present in SelectElement class?
Which are the methods present in SelectElement class?
How to check whether the selectbox is singleListbox or multipleListBox ?
******************************************************************
21
Differences between of handling HTML dropdown and bootstrap(non select tag) dropdown.

Like our facebook page www.facebook.com/ankprotraining

HTML Drop-down 
BootStrap Drop-down
Why we use BootStrap Dropdown

What is HTML Dropdown?
The select element is used to create a drop-down list.
The option tags inside the select element define the available options in the list.

What is BootStrap Dropdown?
It doesn’t contain select tag instead it contains a button, ul and li tags.

Why We Use BootStrap Dropdown?
Bootstrap provides an easy and elegant mechanism for adding the dropdown menu.
It makes look and feel of dropdown good.
Bootstrap will make the controls ready for mobile.

HTML Dropdown Code vs BootStrap Dropdown Code

Possible Interview Questions selenium select element and bootstrap dropdown

What is difference between HTML drop-down and BootStrap drop-down?
******************************************************************
22

******************************************************************
23
Actions class Move To Element overloaded methods with examples
Like our facebook page www.facebook.com/ankprotraining

MoveToElement Method in Action Class

MoveToElement(IWebElement toElement)- Moves the mouse to the specified element.
MoveToElement(IWebElement toElement, int offsetX, int offsetY): Moves the mouse to the specified offset of the top-left corner of the specified element.
MoveToElement(IWebElement toElement, int offsetX, int offsetY, MoveToElementOffsetOrigin offsetOrigin)- Moves the mouse to the specified offset of the top-left corner of the specified element.


Possible Interview Questions on actions class:
How to use MoveToElement methods?

Code :
actions.moveToElement(driver.findElement(By.id("div2")))
 .build()
 .perform();
                         

actions.moveToElement(driver.findElement(By.id("div2")), 20, 20)
 .contextClick()
 .build()
 .perform();
******************************************************************
24

******************************************************************
25
How to double click on a element in selenium c#?
Like our facebook page www.facebook.com/ankprotraining

DoubleClick action method:
DoubleClick()-Double clicks the mouse at the last known mouse coordinates.
DoubleClick(IWebElement onElement)-Double clicks the mouse on the specified element.

Possible Interview Questions on selenium actions double click method :

How to use Double Click method with or without parameter. 
How to Double Click on browser window in C# selenium?
How to Double Click on web element in C# selenium?

Code :
actions
 .MoveToElement(driver.FindElement(By.Name("dblClick"))).DoubleClick()
 .Build()
 .Perform();
 
actions
 .DoubleClick(driver.FindElement(By.Name("dblClick")))
 .Build()
 .Perform();
******************************************************************
26

******************************************************************
27

******************************************************************
28
Actions MoveByOffset Method
Like our facebook page www.facebook.com/ankprotraining
MoveByOffset  Method in Actions Class :
MoveByOffset(int offsetX, int offsetY)- Moves the mouse to the specified offset of the last known mouse coordinates.

Possible Interview Questions on selenium actions class movetooffset method :
How to use MoveByOffset method?
Hove move the mouse by x and y offset in selenium webdriver? 

Code :

actions
 .MoveByOffset(200, 200)
 .ContextClick()
 .Build()
 .Perform();
******************************************************************
29
Actions class mouse DragAndDrop(IWebElement source, IWebElement target) method

Like our facebook page www.facebook.com/ankprotraining

Drag and drop method in actions class:
DragAndDrop(IWebElement source, IWebElement target)- Performs a drag-and-drop operation from one element to another.

Possible Interview Questions on selenium actions drag and drop method :
How to drag and drop web elements in selenium?

Code :
actions
 .DragAndDrop(driver.FindElement(By.Id("draggable")), driver.FindElement(By.Id("droppable")))
 .Build()
 .Perform();
******************************************************************
30
Actions class mouse drag and drop to offset method
Like our facebook page www.facebook.com/ankprotraining

Action class DragAndDropToOffset method :
DragAndDropToOffset(IWebElement source, int offsetX, int offsetY)- Performs a drag-and-drop operation on one element to a specified offset.

Possible Interview Questions on actions class drag and drop to offset method:


How to use selenium actions class DragAndDropToOffset method?

Code :

actions
 .DragAndDropToOffset(driver.FindElement(By.Id("draggable")), 150,20)
        .Build()
        .Perform();
******************************************************************
31
How to use actions class Keydown And Keyup methods?
Like our facebook page www.facebook.com/ankprotraining

Actions class KeyDown method :
KeyDown(string theKey)- Sends a modifier key down message to the browser.
KeyDown(IWebElement element, string theKey)-
Sends a modifier key down message to the specified         element in the browser.

Actions class KeyUp method :
KeyUp(string theKey) -Sends a modifier key up message to the browser.
KeyUp(IWebElement element, string theKey)- Sends a modifier up down message to the specified element in the browser.

Possible Interview Questions on actions class keydown and keyup methods:
How to use selenium actions class KeyDown And KeyUp methods?

Code :
actions
 .KeyDown(Keys.Control)
 .Click(driver.FindElement(By.Name("one")))
 .Click(driver.FindElement(By.Name("six")))
 .Click(driver.FindElement(By.Name("eleven")))
 .KeyUp(Keys.Control)
 .Build()
 .Perform();

actions
 .KeyDown(driver.FindElement(By.Name("one")), Keys.Control)
 .KeyDown(driver.FindElement(By.Name("six")), Keys.Control)
 .KeyUp(driver.FindElement(By.Name("eleven")), Keys.Control)
 .Build()
 .Perform();
******************************************************************
32
How to use Actions class SendKeys method :
Like our facebook page www.facebook.com/ankprotraining

Actions class SendKeys overloaded method :
SendKeys(string keysToSend)- Sends a sequence of keystrokes to the browser.
SendKeys(IWebElement element, string keysToSend)- Sends a sequence of keystrokes to the specified element in the browser.

Possible Interview Questions on actions class sendkeys methods :

How to use SendKeys method with and without parameter?

Code :
actions
 .SendKeys(Keys.F5)
 .Build()
 .Perform();

actions
 .SendKeys(driver.FindElement(By.Name("click")), Keys.Enter)
 .Build()
 .Perform();
******************************************************************
33
Fill entire web form in a single statement using actions class SendKeys method.
Like our facebook page www.facebook.com/ankprotraining

How to Fill entire form in a single statement using Actions class SendKeys?

Actions class SendKeys method :
SendKeys(string keysToSend)- Sends a sequence of keystrokes to the browser.
SendKeys(IWebElement element, string keysToSend)- Sends a sequence of keystrokes to the specified element in the browser.


Possible Interview Questions on actions class sendkey method :
How to fill entire form in a single statement using actions SendKeys?

Code :
[TestMethod]
public void FillFormUsingSendKeys()
{
 IWebDriver driver = new FirefoxDriver();

 driver.Url = "http://ankpro.com/Account/Register";

 Actions actions = new Actions(driver);
 actions
  .Click(driver.FindElement(By.Id("Email")))
  .SendKeys("a@a.com" + Keys.Tab)
  .SendKeys("password1234" + Keys.Tab)
  .SendKeys("password1234" + Keys.Tab)
  .Build()
  .Perform();

 Thread.Sleep(4000);
 driver.Quit();
}
******************************************************************
34
Clear text box content by using actions class sendkeys method in selenium webdriver.
Like our facebook page www.facebook.com/ankprotraining

Clear text box content by using actions class sendkeys sendkeys method in selenium webdriver.

Actions class SendKeys method :
SendKeys(string keysToSend)- Sends a sequence of keystrokes to the browser.
SendKeys(IWebElement element, string keysToSend)- Sends a sequence of keystrokes to the specified element in the browser.

Actions class KeyDown method :
KeyDown(string theKey)- Sends a modifier key down message to the browser.
KeyDown(IWebElement element, string theKey)-
Sends a modifier key down message to the specified         element in the browser.

Actions class KeyUp method :
KeyUp(string theKey) -Sends a modifier key up message to the browser.
KeyUp(IWebElement element, string theKey)- Sends a modifier up down message to the specified element in the browser.

Possible Interview Questions on actions class sendkeys, keyup and keydown methods.

Code :

[TestMethod]
public void ClearTextWithoutUsingSendKeys()
{
 IWebDriver driver = new FirefoxDriver();

 driver.Url = "http://ankpro.com/Account/Register";

 Actions actions = new Actions(driver);
 driver.FindElement(By.Id("Email")).SendKeys("test@test.com");
 Thread.Sleep(2000);
 actions
  .Click(driver.FindElement(By.Id("Email")))
  .SendKeys(Keys.Control + "a" + Keys.Backspace)
  .Build()
  .Perform();

 Thread.Sleep(2000);
 driver.Quit();
}
******************************************************************
35
Synchronization in selenium using Thread.Sleep and implicit wait explained in detail.
Like our facebook page www.facebook.com/ankprotraining

Synchronization
Thread Sleep method
Implicit Wait

What is Synchronization in selenium?
Process of matching automation tool speed with application tool speed is called synchronization.
Whenever Webdriver try to perform action on the element is not loaded in UI or application, in such cases Webdriver throws ‘No such element exception’ and stops the execution because of the synchronization issue.

Thread Sleep method :
Thread Wait causes the currently executing thread to sleep for the specified number of milliseconds.
It always waits for specified amount of time, even though element is available early.
It is also called hard coded wait.

Usage: Thread.Sleep(2000)

Avoid using Thread.Sleep method in the production code.

What is Implicit Wait in selenium?
On implementing implicit wait, if WebDriver cannot find an element in the Document Object Model(DOM), it will wait for a defined amount of time for the element to appear in the DOM
Driver will look for the element by polling every 500 milli second
Driver will wait specified amount time or element is available in the DOM
If the element is not available even after the specified time, driver will throw ElementNotFound exception
Usage: driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

Possible Interview Questions on selenium synchronization using implicit wait and thread.sleep :
What is Synchronization?
What is Thread.Sleep wait?
What is implicit wait?
What is the difference between Thread.Sleep And ImplicitWait?

Code :
[TestClass]
public class Synchronization
{
 [TestMethod]
        public void SynchronizationUsingSleep()
        {
            IWebDriver driver = new FirefoxDriver();
            driver.Url = "http://uitestpractice.com/Students/Co...";
            driver.FindElement(By.PartialLinkText("This is")).Click();
            Thread.Sleep(12000);
            string result = driver.FindElement(By.ClassName("ContactUs")).Text;
   Console.WriteLine(result);
            Assert.IsTrue(result.Contains("Python"));


            Thread.Sleep(1000);
            driver.Quit();

        }
        [TestMethod]
        public void SynchronizationUsingImplicitWait()
        {
            IWebDriver driver = new FirefoxDriver();
   driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(3);
            driver.Url = "http://uitestpractice.com/Students/Co...";
            driver.FindElement(By.PartialLinkText("This is")).Click();
            //Thread.Sleep(12000);
            string result = driver.FindElement(By.ClassName("ContactUs")).Text;
            Assert.IsTrue(result.Contains("Python"));


           driver.Quit();

        }
******************************************************************
36

******************************************************************
37
Differences between Implicit Wait And Explicit Wait explained in detail.

Like our facebook page www.facebook.com/ankprotraining

Differences between implicit wait and explicit wait in selenium webdriver :

Implicit Wait :
Applied on entire page
Once you declared implicit wait it will be available for the entire life of web driver instance
Wait is suggested
Implicit Wait is applicable for all web elements that are on a web page
No conditions involved
Only checks for the presence of web elements

Explicit Wait :
Applied on an element
It will be used if we want the execution to wait for some time until some condition achieved.
Wait is directly expressed
Explicit wait can applied against a single or multiple web elements
Involves conditions provided by ExpectedCondition class’s static methods
Waiting period with certain conditions.

Possible Interview Questions on selenium synchronization :
Explain the differences between ImplicitWait And ExplicitWait types in synchronization?
******************************************************************
38
Synchronization for webpage loading using Page Load Wait explained with code.
Like our facebook page www.facebook.com/ankprotraining

Page Load Wait in selenium webdriver :
Page Load Wait is used to set amount of time to wait for page to load before throwing an exception

Usage:  driver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(20);
Possible Interview Questions on selenium webdriver page load timeout are :
What is Page Load Wait ?
Why to use Page Load Wait?
******************************************************************
39
Synchronization issues with Mixing Implicit Wait And Explicit Wait in selenium webdriver.
Like our facebook page www.facebook.com/ankprotraining

ImplicitWait
ExplicitWait
Issues with mixing ImplicitWait and ExplicitWait

Implicit Wait in selenium webdriver
On implementing implicit wait, if WebDriver cannot find an element in the Document Object Model(DOM), it will wait for a defined amount of time for the element to appear in the DOM
Driver will look for the element by polling every 500 milli second
Driver will wait specified amount time or element is available in the DOM
If the element is not available even after the specified time, driver will throw ElementNotFound exception
Usage: driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);

Explicit Wait in selenium webdriver :
An explicit wait can only be implemented in cases where synchronization is needed for an element and the rest of the script is working fine.
Explicit wait can be used to verify the page title, page url or to find the element.
The Selenium WebDriver provides WebDriverWait and ExpectedCondition classes for implementing an explicit wait.
 The WebDriverWait object will call the ExpectedConditions class method for every 500 milliseconds until it returns successfully or specified time is over.
Usage:  WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(20)); wait.Until(ExpectedConditions.ElementExists(By.ClassName("ContactUs")));

Possible Interview Questions on implicit wait and explicit wait in selenium webdriver :
What is ImplicitWait and ExplicitWait?
What is the difference between Implicit and ExplicitWait?
Which kind of issues we will face if we mix ImplicitWait and ExplicitWait ?

Code :
[TestMethod]
public void ImplicitAndExplicitMix()
{
 IWebDriver driver = new ChromeDriver();
        driver.Url = "http://uitestpractice.com/Students/Co...";
            
        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);
        Stopwatch watch=null;
        try
        {
         watch = Stopwatch.StartNew();

                WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(15));

                wait.Until(ExpectedConditions.ElementExists(By.Id("Dummy")));

                driver.FindElement(By.Id("something")).Click();

           }
           catch(Exception e)
           {
                watch.Stop();
                Console.WriteLine(e);
                Console.WriteLine(watch.ElapsedMilliseconds + " Milli seconds"); 
  }
            driver.Quit();
        }
******************************************************************
40

******************************************************************
41

******************************************************************
42
How to switch to frames and switch back to default window explained with code :
Like our facebook page www.facebook.com/ankprotraining

IFrame :

Frame is a web page which is embedded in another web page or an HTML document embedded inside another HTML document.
The Frame is often used to insert content from another source, such as an advertisement, into a Web page. 
The iframe tag specifies an inline frame.

We can identify the iframes using methods given below:
Right click on the element, if you find the option like ‘View frame source' then it is an iframe.
Right click on the page and click 'View Page Source' and Search with the 'iframe', if you can find any tag name with the 'iframe' then it is meaning to say the page consisting an iframe.
Usage :  driver.SwitchTo().Frame("iframe_a");

How To Switch Back To Main Window?
To get back to the main  you can use

driver.switchTo().DefaultContent();

Selects either the first frame on the page or the main document when a page contains iFrames.

Possible Interview Questions on selenium switch to frames :
How to handle frames in selenium webdriver?
How to navigate back to main Window after switching into Frames?

Code :

[TestMethod]
public void SwitchToFrame()
{
 IWebDriver driver = new FirefoxDriver();
 driver.Url = "http://uitestpractice.com/Students/Sw...";
 driver.SwitchTo().Frame("iframe_a");
 driver.FindElement(By.Id("name")).SendKeys("Ankpro");
 Thread.Sleep(2000);
 driver.SwitchTo().DefaultContent();
 driver.FindElement(By.LinkText("uitestpractice.com")).Click();
 Thread.Sleep(3000);
 driver.Quit();
 }
******************************************************************
43
How to switch between multiple windows and difference between close and quit.
Like our facebook page : www.facebook.com/ankprotraining

How to Switch between multiple windows?
Multiple Window Handles -  
When we have multiple windows in test automation, all we need to do is switching the focus from one window to another.
Usage:  driver.SwitchTo().Window(driver.WindowHandles[1])

How To Get the Current Window Id?
CurrentWindowHandle: Gets the current window handle, which is an opaque handle to this window that uniquely identifies it within this driver instance.

Difference between driver.Quit() And driver.Close()
driver.Close()-This method is used to close the current open window. It closes the current open window on which driver has focus on.
driver.Quit()-This method is used to destroy the instance of WebDriver. It closes all Browser Windows associated with that driver and safely ends the session.

Possible Interview Questions on switching between windows in selenium webdriver :
How to handle multiple windows in selenium webdriver?
What is current window handle?
What is window handles?
What is the difference between driver.Quit() And driver.Close()

Code :
[TestMethod]
public void WindowHandlesDemo1()
{
 IWebDriver driver = new FirefoxDriver();
 driver.Url = "http://uitestpractice.com/Students/Sw...";
 #region One
 Console.WriteLine("Before click");
 Console.WriteLine("Number of windows opened by selenium : " + driver.WindowHandles.Count);
 foreach (var item in driver.WindowHandles)
 {
  Console.WriteLine(item);
  }
 Console.WriteLine("Current window handle : " + driver.CurrentWindowHandle);
 #endregion

 #region Two   
 driver.FindElement(By.LinkText("Opens in a new window")).Click();
 Console.WriteLine("After click");
 Thread.Sleep(2000);
 Console.WriteLine("Number of windows opened by selenium : " + driver.WindowHandles.Count);
 foreach (var item in driver.WindowHandles)
 {
  Console.WriteLine(item);
  }

 // I'm switching a newly opened window and trying get an element from that window
 driver.SwitchTo().Window(driver.WindowHandles[1]);
 Console.WriteLine(driver.FindElement(By.Id("draggable")).Text);
 Console.WriteLine("Current window handle : " + driver.CurrentWindowHandle);
 #endregion

 #region Third
 // I want to close the newly opened window
 Console.WriteLine("After close");
 driver.Close();
 
 Console.WriteLine("Number of windows opened by selenium : " + driver.WindowHandles.Count);
 foreach (var item in driver.WindowHandles)
 {
  Console.WriteLine(item);
  }
 Thread.Sleep(2000);
 driver.SwitchTo().Window(driver.WindowHandles[0]);
 Console.WriteLine("Current window handle : " + driver.CurrentWindowHandle);
 #endregion
 
 Thread.Sleep(1000);
 driver.Quit();
 }
******************************************************************
44

******************************************************************
45
How to handle basic authentication window in selenium webdriver explained :

Like our facebook page : www.facebook.com/ankprotraining

Selenium switch to basic authentication :
This is a Basic authentication window used to accept the username and password with browser alert popup
We will get this popup when we try access a server resource which requires authentication
This popup appears the moment we enter the url in the address bar

We can handle basic authentication in 4 ways
 1. Passing user name and password along with the url
  driver.Url=“http://UserName:Password@ankpro.com”
 2. alert.SetAuthenticationCredentials method. 
  driver.SwitchTo().Alert().SetAuthenticationCredentials(“username”,”password”)
 3. Using SendKeys
  alert.SendKeys( "username" + Keys.Tab + "password" + Keys.Tab); alert.Accept();
 4. We can use the third party automation tools like AutoIt or Sikuli for sending the keys to this window.

The approach to handle authentication window popup may be different in each browser, try any one of mentioned method.
In case your authentication server requires username with domain like "domainuser" you need to add double slash  to the url:
 //domainname\user:password@example.com
If your username or password is having @ symbol then replace it with %40

Possible Interview Questions on selenium webdriver handling of basic authentication window :
How to handle basic authentication windows?
******************************************************************
46

******************************************************************
47

******************************************************************
48
How to Take screenshot of specific element using C# extension method
Like our facebook page www.facebook.com/ankprotraining

How to Take screenshot of specific element using extension method
Take Screenshot Of Specific Element Using Extension Method :
Capturing Screenshot :
Selenium WebDriver provides the capability to capture screenshots during a test execution. 

It is always good to capture the screenshot of the test results if you are running the tests overnight.

The capability to take a screenshot with selenium is extracted from the "ITakesScreenshot" interface that allowing us to take a screenshot of the current page displayed in the driver instance.

C# Extension Method:
Extension methods enable you to add methods to existing types without creating a new derived type, recompiling, or otherwise modifying the original type
An extension method is a special kind of static method.

How To Take Screenshot Of Specific Element Using Extension Method :
static class Utils
{
public static void TakeScreenshot2(this IWebDriver driver, IWebElement element)
{
string fileName = DateTime.Now.ToString("yyyy-MM-dd HH-mm-ss") + ".jpg";
Byte[] byteArray = ((ITakesScreenshot)driver).GetScreenshot().AsByteArray;
Bitmap screenshot = new Bitmap(new System.IO.MemoryStream(byteArray));
Rectangle croppedImage = new Rectangle(element.Location.X, element.Location.Y, element.Size.Width, element.Size.Height);
screenshot = screenshot.Clone(croppedImage, screenshot.PixelFormat);
screenshot.Save(String.Format(fileName, ImageFormat.Jpeg));
}
}

How To Take Screenshot Of Specific Element Using Extension Method :
TakeScreenshot( driver.FindElement(By.ClassName("jumbotron")));

Possible Interview Questions on selenium webdriver screenshot using c# extension method:
How to capture the screenshot of specific element using extension method

Code :
[TestMethod]
public void ScreenshotOfElementUsingExtensionMethod()
{
 IWebDriver driver = new FirefoxDriver();
 driver.Url = "http://ankpro.com/";
 driver.TakeScreenshot1(driver.FindElement(By.ClassName("jumbotron")));
 driver.Quit();
 }
 
static class Utils
{
 public static void TakeScreenshot1(this IWebDriver driver,IWebElement element)
 {
  string fileName = DateTime.Now.ToString("yyyy-MM-dd HH-mm-ss") + ".jpg";
  Byte[] byteArray = ((ITakesScreenshot)driver).GetScreenshot().AsByteArray;
  Bitmap screenshot = new Bitmap(new System.IO.MemoryStream(byteArray));
  Rectangle croppedImage = new Rectangle(element.Location.X, element.Location.Y, element.Size.Width, element.Size.Height); 
  screenshot = screenshot.Clone(croppedImage, screenshot.PixelFormat);
  screenshot.Save(String.Format(fileName, ImageFormat.Jpeg));
  }
 }
******************************************************************
49

******************************************************************
50

******************************************************************
51
Javascript executor
IJavascript Interface
Alert using JavascriptExecutor
Refresh the page using JavascriptExecutor
Handle checkbox using JavascriptExecutor
InnerText using JavascriptExecutor
Get the Title of a page using  JavascriptExecutor
Get a domain of a page using JavascriptExecutor
Get a URL of a page using JavascriptExecutor
How to scroll a page using JavascriptExecutor
How to navigate to other page using JavascriptExecutor
Type text of JavascriptExecutor
How to get height and width of a page using  JavascriptExecutor

What is JavaScript?
JavaScript is the preferred language inside the browser to interact with HTML dom. 
This means that a Browser has JavaScript implementation in it and understands the JavaScript commands. 

What is IJavaScriptExecutor?
 
IJavaScriptExecutor is an Interface that helps to execute JavaScript through Selenium Webdriver.

IJavaScriptExecutor provides two methods "executescript" & "executeAsyncScript“ to run JavaScript on the selected window or current page.

Alert Pop Window
We can create the alert pop-up using allowing code
 (IJavaScriptExecutor)driver).ExecuteScript(“alert('Hello')");

To Refresh The Page
We can refresh the page by using following code
 ((IJavaScriptExecutor)driver).ExecuteScript("history.go(0)");

To Handle Checkbox
To make the checkbox has checked
 ((IJavaScriptExecutor)driver).ExecuteScript("document.querySelectorAll('input[value = read]')[0].click()");

To make the checkbox has unchecked
 ((IJavaScriptExecutor)driver).ExecuteScript("document.querySelectorAll('input[value = read]')[0].click()");

To Get The Inner Text
We can the inner text of page by using following code
 ((IJavaScriptExecutor)driver).ExecuteScript("return document.documentElement.innerText;").ToString();

To Get The Title Of Page
We can get title of page by using following code
 ((IJavaScriptExecutor)driver).ExecuteScript("return document.title;").ToString();

To Get The Domain Of Page
We can get Domain of page by using following code
((IJavaScriptExecutor)driver).ExecuteScript("return document.domain;").ToString();

To Get The URL Of Page
We can get URL of page by using following code
((IJavaScriptExecutor)driver).ExecuteScript("return document.URL;").ToString();

To Scroll The Page
To scroll the page vertically for 500px we use the following code
((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0,500)");

To scroll the page vertically till the end we use following code
IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0,document.body.scrollHeight)");

To navigate other page
We can navigate to other page by using following code
(IJavaScriptExecutor)driver).ExecuteScript("window.location='http://uitestpractice.com'");

To Get The Height And Width of page
We can height and width of a page by using following code
((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;")
((IJavaScriptExecutor)driver).ExecuteScript("return window.innerWidth;")

To Type The Text
We can type the text into a text box by using following code
((IJavaScriptExecutor)driver).ExecuteScript("document.getElementById('Email').value='abc@abc.com';");

Possible Interview Questions on IJavaScriptExecutor
What is Javascript
What is IJavascriptExecutor
How to create alert using IJavaScriptExecutor
How to refresh the page using IJavaScriptExecutor
How to handle the checkbox using IJavaScriptExecutor
How to get the InnerText of javascript Executor
How to get the title of a page using IJavaScriptExecutor
How to get a domain of a page using IJavaScriptExecutor
How to get a URL of a page using IJavaScriptExecutor
How to scroll a page using IJavascriptExecutor
How to navigate to other page using IJavascriptExecutor
How to get the height and width of a page using IJavascript Executor
How to type text into text box using IJavaScriptExecutor

Code : 
[TestMethod]
public void JavaScriptDemo()
{
 IWebDriver driver = new FirefoxDriver();
 driver.Url = "http://ankpro.com";

 //((IJavaScriptExecutor)driver).ExecuteScript("prompt('Hello')");
 //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", "element");

 //((IJavaScriptExecutor)driver).ExecuteScript("history.go(0)");

 driver.Url = "http://uitestpractice.com/Students/Form";
 //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementByValue('dance').checked=true;");
 ((IJavaScriptExecutor)driver).ExecuteScript("document.querySelectorAll('input[value = read]')[0].click()");

 //String sText = ((IJavaScriptExecutor)driver).ExecuteScript("return document.documentElement.innerText;").ToString();
 //Console.WriteLine(sText);

 //String sText1 = ((IJavaScriptExecutor)driver).ExecuteScript("return document.title;").ToString();
 //Console.WriteLine(sText1);

 //String Text = ((IJavaScriptExecutor)driver).ExecuteScript("return document.domain;").ToString();
 //Console.WriteLine(Text);

 Thread.Sleep(2000);
 driver.Quit();
 }
******************************************************************
52
How to get hidden field values using IJavaScriptExecutor

What is JavaScript?
JavaScript is the preferred language inside the browser to interact with HTML dom. 
This means that a Browser has JavaScript implementation in it and understands the JavaScript commands. 

What is IJavaScriptExecutor? 
IJavaScriptExecutor is an Interface that helps to execute JavaScript through Selenium Webdriver.

IJavaScriptExecutor provides two methods "executescript" & "executeAsyncScript“ to run JavaScript on the selected window or current page.

Hidden Field:
The input type="hidden" defines a hidden input field.
 A hidden field let web developers include data that cannot be seen or modified by users when a form is submitted.
We can not get those values using only selenium but we get those values using IJavaScriptExecutor along with selenium

How to get hidden field values using IJavaScriptExecutor?
By using this code we will get hidden field values
((IJavaScriptExecutor)driver).ExecuteScript(" return document.getElementById('Id').value").ToString();

Possible Interview Questions on hidden field in selenium
How to get hidden field values using IJavaScriptExecutor

Code :
[TestMethod]
public void HiddenField()
{
 IWebDriver driver = new FirefoxDriver();
 driver.Url = "http://uitestpractice.com/Students/Index";
        driver.FindElement(By.XPath("//tbody//tr[2]//td[4]//button[1]")).Click();
        string s = ((IJavaScriptExecutor)driver).ExecuteScript(" return document.getElementById('Id').value").ToString();
        Console.WriteLine(s);
        driver.Quit();
 }
******************************************************************
53

******************************************************************
54

******************************************************************
55
What is ChromeOptions class?
What is FirefoxOptions class?
Test case execution using chrome in headless mode
Test case execution using Firefox in headless mode

#selenium #qa #testing #seleniumcsharp #chrome #chromeheadless #firefox #firefoxheadless #automation #tester #seleniumautomation #automationtesting #webdriver #softwaretesting

What is ChromeOptions class?
Class to manage options specific to OpenQA.Selenium.Chrome.ChromeDriver
public void AddArgument(string argument); 
     Adds a single argument to the list of arguments to be appended to the Chrome.exe command line.
Example : 
ChromeOptions options = new ChromeOptions();             
options.AddArgument("--headless");

What is FirefoxOptions class?
Class to manage options specific to OpenQA.Selenium.Firefox.FirefoxDriver
 public void AddArgument(string argument); 
Adds a single argument to the list of arguments to be appended to the Firefox.exe command line.
Example : 
FirefoxOptions options = new FirefoxOptions();             
options.AddArgument("--headless");

Possible Interview Questions on Chrome and firefox headless execution
What is a ChromeOptions class?
How to execute the test cases in Chrome Headless browser?
What is a FirefoxOptions class?
How to execute the test cases in Firefox Headless browser?


Program :

[TestMethod]
        public void ChromeAndFirefoxHeadless()
        {
            //ChromeOptions options = new ChromeOptions();
            //options.AddArgument("--headless");

            FirefoxOptions options = new FirefoxOptions();
            options.AddArgument("--headless");

            IWebDriver driver = new FirefoxDriver(options);
            driver.Url = "http://ankpro.com";

            string s = driver.FindElement(By.ClassName("lead")).Text;

            Console.WriteLine(s);

            driver.Quit();
        }
******************************************************************
56
#seleniumcsharp #selenium #fullpagescreenshot

Link to extension method : https://www.youtube.com/watch?v=-SU2d...
Link to Screenshot capture : https://www.youtube.com/watch?v=B4rbf...

Agenda
Issue with ITakeScreenshot interface implementation
Noksa.WebDriver.ScreenshotsExtensions nuget package
Implementation of fullpage screenshot capturing for chrome and firefox


Noksa.WebDriver.ScreenshotsExtensions nuget package
using WDSE;
 ExtensionMethods class
  TakeScreenshot – Extension method gets added to webdriver interface
  ToMagicImage – Extension method for byte[] and used to save the image
using WDSE.Decorators;
 VerticalCombineDecorator – Sets vertical screen capture 
using WDSE.ScreenshotMaker;
 ScreenshotMaker – Generates the screenshot

Possible Interview Questions
How do you capture full web page screenshot?

Code 

[TestMethod]
public void FullWebPageScreenShotCapture()
{
 IWebDriver driver = new ChromeDriver();
        driver.Manage().Window.Maximize();

 driver.Url = "https://www.selenium.dev/";

 // ((ITakesScreenshot)driver).GetScreenshot().SaveAsFile("oldFirefox.png");

 VerticalCombineDecorator vcd = new VerticalCombineDecorator(new ScreenshotMaker().RemoveScrollBarsWhileShooting());
        driver.TakeScreenshot(vcd).ToMagickImage().ToBitmap().Save("newChrome.png");

 driver.Quit();
}
******************************************************************
57

******************************************************************
58
#highlightelement #selenium #seleniumcsharp
What is IJavaScriptExecutor?
How to highlight the element?
Highlight elements in action globally using ElementClicking and ElementValueChanging events

Selenium with C# 57 - Capturing Selenium Events using Event Firing Web Driver class selenium events 
https://www.youtube.com/watch?v=P7waY...

Selenium with C# 51 - IJavaScriptExecutor interface | How to execute JavaScript from Selenium
https://www.youtube.com/watch?v=f7ik4...

What is IJavaScriptExecutor?
IJavaScriptExecutor is an Interface
It helps to execute JavaScript through Selenium WebDriver
ExecuteScript method takes variable parameters
1st parameter is the JavaScript code
2nd parameter is the element on which JavaScript has to execute
((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].style.border='3px dotted blue'", element);

Possible Interview Questions
What is IJavaScriptExecutor?
What is EventFiringWebDriver?
How to highlight the element in action?

Code :

[TestMethod]
        public void HighlightTheElementWorking()
        {
            IWebDriver driver = new ChromeDriver();
            driver.Manage().Window.Maximize();
            driver.Url = "http://uitestpractice.com/Students/Index";
            
            EventFiringWebDriver eventFiringWebDriver = new EventFiringWebDriver(driver);

            // Click events
            eventFiringWebDriver.ElementClicking += EventFiringWebDriver_ElementClicking;

            // Element Value changing events
            eventFiringWebDriver.ElementValueChanging += EventFiringWebDriver_ElementValueChanging;
            driver = eventFiringWebDriver;

            driver.FindElement(By.LinkText("Create New")).Click();
            driver.FindElement(By.Id("FirstName")).SendKeys("Tyler");
            driver.FindElement(By.Id("LastName")).SendKeys("Durden");
            driver.FindElement(By.Id("EnrollmentDate")).SendKeys("12/10/1999");
            driver.FindElement(By.XPath("//input[@value='Create']")).Click();
            driver.FindElement(By.Id("Search_Data")).SendKeys("Tyler");
            driver.FindElement(By.XPath("//input[@value='Find']")).Click();

            driver.Quit();
        }
        
        private void EventFiringWebDriver_ElementValueChanging(object sender, WebElementValueEventArgs e)
        {
            HighlightElement(e.Element, e.Driver);
        }        

        private void EventFiringWebDriver_ElementClicking(object sender, WebElementEventArgs e)
        {
            HighlightElement(e.Element, e.Driver);
        }

        private IWebElement HighlightElement(IWebElement element, IWebDriver driver)
        {            
            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].style.border='3px dotted blue'", element);
            return element;
        }
******************************************************************
59
Agenda
What is ChromeOptions class and AddUserProfilePreference() method?
What is FirefoxOptions class and SetPreference() method?
What is File class and Exists() method?
What are FileInfo class and Name, FullName and Length properties?

ChromeOptions class and AddUserProfilePreference() method
ChromeOptions Class is used to manage options specific to chrome driver
This class is available in OpenQA.Selenium.Chrome namespace
public void AddUserProfilePreference (string preferenceName, object preferenceValue); 
Adds a preference for the user-specific profile or "user data directory." If the specified preference already exists, it will be overwritten.
Code : 
ChromeOptions chromeOptions = new ChromeOptions();
chromeOptions.AddUserProfilePreference("download.default_directory", @"C:\Downloads");

FirefoxOptions class and SetPreference() method
FirefoxOptions Class is used to manage options specific to firefox driver
This class is available in OpenQA.Selenium.Firefox namespace
public void SetPreference (string preferenceName, string preferenceValue); 
Sets a preference in the profile used by Firefox
It is a overloaded method, preferenceValue parameter data type can be bool, int, long, double and string.
Code : 
FirefoxOptions firefoxOptions = new FirefoxOptions();
firefoxOptions.SetPreference("browser.download.folderList", 2);
firefoxOptions.SetPreference("browser.download.dir", @"C:\Downloads");
firefoxOptions.SetPreference("browser.helperApps.neverAsk.saveToDisk", "image/png");

File class and Exists() method
File is a static class
It has methods for the creation, copying, deletion, moving, and opening of a file
public static bool Exists(string path);
Exists() method returns true if the file exists in the provided path else returns false.
It takes string(File Path) as a parameter
Code : 
File.Exists(expectedFilePath);

FileInfo class and Name, FullName and Length properties
FileInfo is a sealed class
It has methods and properties for the creation, copying, deletion, moving, and opening of a file
public long Length { get; }
Gets the size, in bytes, of the current file.
public override string Name { get; }
Gets the name of the file. Code : 
public virtual string FullName { get; }
Gets the full path of the file(Includes drive and folder name).

Possible Interview Questions
What is a ChromeOptions class?
What is AddUserProfilePreference() method?
What is a FirefoxOptions class?
What is SetPreference() method?
How to download and verify a file in selenium?

Code :

[TestMethod]
        public void VerifyFileDownload()
        {            
            string expectedFilePath = @"C:\Downloads\images.png";
            bool fileExists = false;

            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddUserProfilePreference("download.default_directory", @"C:\Downloads");
            var driver = new ChromeDriver(chromeOptions);
            
            FirefoxOptions firefoxOptions = new FirefoxOptions();
            firefoxOptions.SetPreference("browser.download.folderList", 2);
            firefoxOptions.SetPreference("browser.download.dir", @"C:\Downloads");
            firefoxOptions.SetPreference("browser.helperApps.neverAsk.saveToDisk", "image/png");

            // mimetype
            // "application/msword, application/binary, application/ris, text/csv, image/png, application/pdf, text/html, text/plain, application/zip, application/x-zip, application/x-zip-compressed, application/download, application/octet-stream "
                                   
            //var driver = new FirefoxDriver(firefoxOptions);            

            driver.Manage().Window.Maximize();
            driver.Url = "http://uitestpractice.com/Students/Wi...";
            driver.FindElement(By.XPath("//button/a")).Click();
            try
            {
                WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(60));
                wait.Until greater than bool lessthan (x =greaterthan fileExists = File.Exists(expectedFilePath));

                Console.WriteLine("File exists : " + fileExists);

                FileInfo fileInfo = new FileInfo(expectedFilePath);
                
                Console.WriteLine("File Length : "+fileInfo.Length);
                Console.WriteLine("File Name : "+fileInfo.Name);
                Console.WriteLine("File Full Name :"+fileInfo.FullName);

                Assert.AreEqual(1517, fileInfo.Length);
                Assert.AreEqual(fileInfo.Name, "images.png");
                Assert.AreEqual(fileInfo.FullName, @"C:\Downloads\images.png");
                
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            finally
            {
                if (File.Exists(expectedFilePath))             
                    File.Delete(expectedFilePath);
                
            }
            driver.Quit();
        }
******************************************************************
60

******************************************************************
61
In this video we will see
What is an SSL certificate
When SSL certificate becomes invalid 
Code demo on how to handle invalid SSL certificate error in Chrome & Firefox using selenium C#

#selenium #seleniumcsharp #seleniumsslerror

*When SSL certificate becomes invalid? *
Site is using an expired certificate
Certificate doesn’t include the website’s hostname
Certificate is using the outdated algorithm and no longer trusted

Possible Interview Questions on ssl certificate error in selenium
What is an ssl certificate?
How websites provide security to sensitive data?
When ssl certificates becomes invalid?
How to handle websites with invalid ssl certificates in selenium?

*Code: *
[TestMethod]
        public void HandleInvalidSSLCertificateError()
        {
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AcceptInsecureCertificates = true;

            FirefoxOptions firefoxOptions = new FirefoxOptions();
            firefoxOptions.AcceptInsecureCertificates = true;

            IWebDriver driver = new FirefoxDriver(firefoxOptions);
            driver.Manage().Window.Maximize();
            driver.Url = "https://expired.badssl.com/";

            Console.WriteLine(driver.FindElement(By.Id("content")).Text);
            Thread.Sleep(2000);
            driver.Quit();
        }
******************************************************************
62
Data Driven Testing in MS Test using DataRow and DynamicData attributes for selenium

0:15 Agenda
0:56 What is data driven testing
1:45 Why data driven testing is required
2:54 DataRow and DynamicData Attribute
3:44 Code demo for DataRow attribute
10:39 Code demo for DynamicData attribute
15:52 Possible interview questions on data driven testing

What is data driven testing
Data sources 
DataRow Attribute
DynamicData Attribute

What is data driven testing?
Data is used to drive test cases and suites from an external data feed.
Data can be feed from xls, xlsx, csv, xml and databases

Why data driven testing is required?
Allows testing of the application with multiple sets of data values
Separates the test case data from the executable test script
Allows reusing of Actions and Functions in different tests
Data driven test cases are flexible and easy to maintain
The same test cases are executed several times which helps to reduce efforts and code
Any changes in the test script do not effect the test data

DataRow and DynamicData Attribute
DataRow
 Attribute to define in-line data for a test method.
  Example :
   [DataRow("NARENDRA","MODI","01/01/2019")]
DynamicData
 Attribute to define dynamic data for a test method.
  Example :
   [DynamicData(nameof(GetData), DynamicDataSourceType.Method)]

Possible Interview Questions on data driven testing with selenium
What is data driven testing?
Advantages of data driven testing?
What are the attributes used in data driven testing using MSTest?
What is DataRow attribute?
What is DynamicData attribute?

Code :
[TestClass]
    public class UnitTest1
    {
        [TestMethod]
        [DataRow("Narendra","Modi","01/01/2019")]
        [DataRow("donald", "trump", "07/01/2020")]
        [DataRow("BORIS", "JOHNSON", "12/31/2021")]
        public void DataDrivenTestingUsingDataRow(string fName, string lName, string eDate)
        {
            IWebDriver driver = new ChromeDriver();
            driver.Manage().Window.Maximize();
            driver.Url = "http://uitestpractice.com/Students/Cr...";

            driver.FindElement(By.Id("FirstName")).SendKeys(fName);
            driver.FindElement(By.Id("LastName")).SendKeys(lName);
            driver.FindElement(By.Id("EnrollmentDate")).SendKeys(eDate);
            driver.FindElement(By.XPath("//input[@type='submit']")).Click();

            driver.Quit();
        }

        [DynamicData(nameof(GetData), DynamicDataSourceType.Method)]
        [TestMethod]        
        public void DataDrivenTestingUsingDynamicData(string fName, string lName, string eDate)
        {
            IWebDriver driver = new ChromeDriver();
            driver.Manage().Window.Maximize();
            driver.Url = "http://uitestpractice.com/Students/Cr...";

            driver.FindElement(By.Id("FirstName")).SendKeys(fName);
            driver.FindElement(By.Id("LastName")).SendKeys(lName);
            driver.FindElement(By.Id("EnrollmentDate")).SendKeys(eDate);
            driver.FindElement(By.XPath("//input[@type='submit']")).Click();

            driver.Quit();
        }

        public static IEnumerable&lt;object[]&gt; GetData()
        {
            yield return new object[] { "Narendra", "Modi", "01/01/2019" };
            yield return new object[] { "donald", "trump", "07/01/2020" };
            yield return new object[] { "BORIS", "JOHNSON", "12/31/2021" };
        }
    }
******************************************************************
63

******************************************************************
64
Selenium Data Driven Testing using CSV file in MS Test

0:50 What is a CSV file
1:21 What is datasource attribute
2:00 What is TestContext class
3:00 Code demo - CSV file creation
4:06 Code demo - Creation of test method
6:05 Adding TestContext property
7:45 Test method execution
8:57 Possible interview questions on data driven testing using csv file

#selenium #webdriver #qa #tester #datadriventesting

Data driven testing using csv file 

What is a CSV file?
1. Comma Separated Values (CSV)
2. It is a plain file text file that contains a list of data
3. A CSV file has a fairly simple structure
4. It’s a list of data separated by commas



Possible Interview Questions
1. How to achieve the data driven testing using csv file
2. What is DataSource attribute
3. What is TestContext class
4. What is DataRow property


Code :

[DataSource("Microsoft.VisualStudio.TestTools.DataSource.CSV","|DataDirectory|\\data.csv", "data#csv", DataAccessMethod.Sequential)]
[TestMethod]
public void DataDrivenTestingUsingCSVFile()
{
 IWebDriver driver = new ChromeDriver();
        driver.Manage().Window.Maximize();
        driver.Url = "http://uitestpractice.com/Students/Cr...";

 driver.FindElement(By.Id("FirstName")).SendKeys(TestContext.DataRow[0].ToString());
        driver.FindElement(By.Id("LastName")).SendKeys(TestContext.DataRow[1].ToString());
        driver.FindElement(By.Id("EnrollmentDate")).SendKeys(TestContext.DataRow[2].ToString());
        driver.FindElement(By.XPath("//input[@type='submit']")).Click();
 
 Thread.Sleep(2000);
        driver.Quit();
        }
******************************************************************
65
Selenium Data Driven Testing using XML file in MS Test
#Selenium #WebDriver #Automation #datadriventesting

0:47 What is a XML file
1:12 XML file sample
1:50 Code demo - XML file creation
3:45 Code demo - Creation of test method
5:00 Test method execution
5:52 Possible interview questions on data driven testing using csv file


Data driven testing using csv file 

What is an XML file?
1. XML stands for eXtensible Markup Language
2. XML is a markup language much like HTML
3. XML is used to store and transport data
4. XML is self-descriptive
5. Easy to read

Possible Interview Questions
1. How to achieve the data driven testing using XML file

Code :

[DataSource("Microsoft.VisualStudio.TestTools.DataSource.XML","|DataDirectory|\\data.xml", "user", DataAccessMethod.Sequential)]
[TestMethod]
public void DataDrivenTestingUsingXMLFile()
{
 IWebDriver driver = new ChromeDriver();
        driver.Manage().Window.Maximize();
        driver.Url = "http://uitestpractice.com/Students/Cr...";

 driver.FindElement(By.Id("FirstName")).SendKeys(TestContext.DataRow[0].ToString());
        driver.FindElement(By.Id("LastName")).SendKeys(TestContext.DataRow[1].ToString());
        driver.FindElement(By.Id("EnrollmentDate")).SendKeys(TestContext.DataRow[2].ToString());
        driver.FindElement(By.XPath("//input[@type='submit']")).Click();
 
 Thread.Sleep(2000);
        driver.Quit();
        }
******************************************************************
66
Selenium data driven testing using MS SQL as data source in MS Test
#selenium #webdriver #automation #datadriventesting #qa 

1:03 How to create a database table
2:12 Adding the data rows to the table
2:47 Code demo - Creation of test method
7:10 Test method execution
8:00 Possible interview questions on data driven testing using sql


Data driven testing using MS SQL and MS Test 

How to create a database and table in MS SQL 
Adding the data in to the table
Create a data driven test method which uses data from MS SQL table


Possible Interview Questions
1. How to use the MS SQL data as a source in selenium data driven testing?
2. What is a connection string?
3. What is the “Provider Invariant Name” for the MS SQL as data source?

Code :
[DataSource("System.Data.SqlClient", 
            "Server=.\\SQLExpress; Database=DataDrivenTesting;User Id=sa; Password=Ankpro01*",
            "Student", DataAccessMethod.Sequential)]
[TestMethod]
public void DataDrivenTestingUsingSQL()
{
 IWebDriver driver = new ChromeDriver();
        driver.Manage().Window.Maximize();
        driver.Url = "http://uitestpractice.com/Students/Cr...";

 driver.FindElement(By.Id("FirstName")).SendKeys(TestContext.DataRow[0].ToString().Trim());
        driver.FindElement(By.Id("LastName")).SendKeys(TestContext.DataRow[1].ToString().Trim());   driver.FindElement(By.Id("EnrollmentDate")).SendKeys(TestContext.DataRow[2].ToString());
 driver.FindElement(By.XPath("//input[@type='submit']")).Click();

 Thread.Sleep(2000);
        driver.Quit();
        }
******************************************************************
67
SelectorsHub | Build your own XPath & CSSSelector in seconds | Installation
Agenda
What is SelectorsHub 
How to install SelectorsHub extension
Where to find SelectorsHub tab
SelectorsHub features demo
 Auto suggest
 Invalid Xpath error message
 Shadow DOM support
 Iframe support
 SVG element xpath support
#SelectorsHub #selenium #automation

Timeline:
0:18 Agenda
1:30 What is SelectorsHub 4.0
2:48 How to install SelectorsHub extension
3:37 Where to find SelectorsHub tab
4:48 SelectorsHub feature - Auto suggest demo
7:36 SelectorsHub feature - Invalid Xpath error message demo
8:30 SelectorsHub feature - Shadow DOM supportdemo
9:50 SelectorsHub feature - Iframe support demo
12:42 SelectorsHub feature - SVG element xpath support demo


What is SelectorsHub?
Xpath and CSSSelector building tool
Free Chrome extension
Created by Sanjay kumar 
It helps you to learn Xpath syntax
Most secured

SelectorsHub is a time saver tool if you are trying to write your own xpath or css selector. 
You don’t have to copy and paste the values from the DOM to build xpath. It gives you quick auto suggestions on text, attributes, siblings, parents, childNodes, ancestors and descendants. If you have written a wrong xpath, the tool will inform you about the errors and suggests you the way to correct.

SelectorsHub is a free tool no license in required. Right now it is available, very soon this extension will be available in firefox, edge, safari browsers also.

This tool is created by Sanjay kumar who has also created ChroPath which is a popular tool among automation engineers.

Chrome webstore link for selectorshub:
https://chrome.google.com/webstore/se...

Where to find the selectorshub tool in the browser?

SelectorsHub features demo
Auto suggest
Invalid Xpath error message
Shadow DOM support
Iframe support
SVG element xpath support
Auto suggest and error message
Show for xpath and css selector(# . Tag name)
https://www.selectorshub.com/best-css...



https://books-pwakit.appspot.com/
shadow root Open 
Shadow root Close
Change in the color

Just inspect the element if it will be inside iframe, SelectorsHub will show “in iframe” in the SelectorsHub tab.
To write the xpath/cssSelector for any element which is inside an iframe, just inspect that element and start typing.
Context switching
http://uitestpractice.com/
Limitation of Iframe is, it will not support the iframe from different source. Iframe source must be of same origin
https://www.selectorshub.com/contact/

SVG elements doesn’t support the standard XPath pattern. So most of the times we struggle while writing the XPath for SVG elements. You just type // and it will suggest the correct syntax and you can build XPath without wasting anytime.
https://www.w3schools.com/html/html5_...

selectorshub does not stores any user data, The tool runs in local environment. Injection of script happens only when you open this tool in the elements tab sidebar.
